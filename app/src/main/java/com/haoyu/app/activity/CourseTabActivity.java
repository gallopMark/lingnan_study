package com.haoyu.app.activity;import android.content.Intent;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.view.View;import android.widget.Button;import android.widget.CompoundButton;import android.widget.RadioButton;import com.haoyu.app.base.BaseActivity;import com.haoyu.app.fragment.PageCourseFragment;import com.haoyu.app.fragment.PageDiscussionFragment;import com.haoyu.app.fragment.PageProgressFragment;import com.haoyu.app.fragment.PageQuestionFragment;import com.haoyu.app.fragment.PageResourcesFragment;import com.haoyu.app.lingnan.student.R;import com.haoyu.app.view.AppToolBar;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.BindViews;public class CourseTabActivity extends BaseActivity {    private CourseTabActivity context = this;    private static final int PAGE_COURSE = 0;  //学习    private static final int PAGE_RESOURCES = 1;    //资源    private static final int PAGE_DISCUSSION = 2;   //讨论    private static final int PAGE_QUESTION = 3; //问答    private static final int PAGE_PROGRESS = 4; //进度    private FragmentManager fragmentManager;    private List<Fragment> fragments = new ArrayList<>();    @BindView(R.id.toolBar)    AppToolBar toolBar;    @BindViews({R.id.rb_section, R.id.rb_resources, R.id.rb_discuss, R.id.rb_wenda, R.id.rb_progress})    RadioButton[] radioButtons;    @BindView(R.id.bt_download)    Button bt_download;    private boolean training;    private String courseId;    private String courseType;    private PageCourseFragment pageCourseFragment;    private PageResourcesFragment pageResourcesFragment;    private PageDiscussionFragment pageDiscussionFragment;    private PageQuestionFragment pageQuestionFragment;    private PageProgressFragment pageProgressFragment;    @Override    public int setLayoutResID() {        return R.layout.activity_course_tab;    }    @Override    public void initView() {        training = getIntent().getBooleanExtra("training", false);        courseId = getIntent().getStringExtra("courseId"); // 课程Id，通过intent获取        String courseTitle = getIntent().getStringExtra("courseTitle");        courseType = getIntent().getStringExtra("courseType");        fragmentManager = getSupportFragmentManager();        toolBar.setTitle_text(courseTitle);        changeTabIndex(PAGE_COURSE);    }    @Override    public void setListener() {        toolBar.setOnLeftClickListener(new AppToolBar.OnLeftClickListener() {            @Override            public void onLeftClick(View view) {                finish();            }        });        bt_download.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(context, AppDownloadActivity.class);                startActivity(intent);            }        });        CompoundButton.OnCheckedChangeListener changeListener = new CompoundButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(CompoundButton cb, boolean isChecked) {                for (RadioButton button : radioButtons) {                    button.setChecked(false);                }                switch (cb.getId()) {                    case R.id.rb_section:                        changeTabIndex(PAGE_COURSE);                        return;                    case R.id.rb_resources:                        changeTabIndex(PAGE_RESOURCES);                        return;                    case R.id.rb_discuss:                        changeTabIndex(PAGE_DISCUSSION);                        return;                    case R.id.rb_wenda:                        changeTabIndex(PAGE_QUESTION);                        return;                    case R.id.rb_progress:                        changeTabIndex(PAGE_PROGRESS);                        return;                }            }        };        for (RadioButton radioButton : radioButtons)            radioButton.setOnCheckedChangeListener(changeListener);    }    private void changeTabIndex(int index) {        FragmentTransaction transaction = fragmentManager.beginTransaction();        hideFragments(transaction);        switch (index) {            case PAGE_COURSE:                radioButtons[0].setChecked(true);                if (pageCourseFragment == null) {                    pageCourseFragment = new PageCourseFragment();                    Bundle bundle = new Bundle();                    bundle.putBoolean("training", training);                    bundle.putString("entityId", courseId);                    bundle.putString("courseType", courseType);                    pageCourseFragment.setArguments(bundle);                    transaction.add(R.id.content, pageCourseFragment);                    fragments.add(pageCourseFragment);                } else {                    transaction.show(pageCourseFragment);                }                break;            case PAGE_RESOURCES:                radioButtons[1].setChecked(true);                if (pageResourcesFragment == null) {                    pageResourcesFragment = new PageResourcesFragment();                    Bundle bundle = new Bundle();                    bundle.putString("entityId", courseId);                    pageResourcesFragment.setArguments(bundle);                    transaction.add(R.id.content, pageResourcesFragment);                    fragments.add(pageResourcesFragment);                } else {                    transaction.show(pageResourcesFragment);                }                break;            case PAGE_DISCUSSION:                radioButtons[2].setChecked(true);                if (pageDiscussionFragment == null) {                    pageDiscussionFragment = new PageDiscussionFragment();                    Bundle bundle = new Bundle();                    bundle.putString("entityId", courseId);                    pageDiscussionFragment.setArguments(bundle);                    transaction.add(R.id.content, pageDiscussionFragment);                    fragments.add(pageDiscussionFragment);                } else {                    transaction.show(pageDiscussionFragment);                }                break;            case PAGE_QUESTION:                radioButtons[3].setChecked(true);                if (pageQuestionFragment == null) {                    pageQuestionFragment = new PageQuestionFragment();                    Bundle bundle = new Bundle();                    bundle.putString("entityId", courseId);                    pageQuestionFragment.setArguments(bundle);                    transaction.add(R.id.content, pageQuestionFragment);                    fragments.add(pageQuestionFragment);                } else {                    transaction.show(pageQuestionFragment);                }                break;            case PAGE_PROGRESS:                radioButtons[4].setChecked(true);                if (pageProgressFragment == null) {                    pageProgressFragment = new PageProgressFragment();                    pageProgressFragment.setOnSelectCallBack(new PageProgressFragment.OnSelectCallBack() {                        @Override                        public void onClickCallBack() {                            changeTabIndex(PAGE_COURSE);                        }                    });                    Bundle bundle = new Bundle();                    bundle.putBoolean("training", training);                    bundle.putString("entityId", courseId);                    bundle.putString("courseType", courseType);                    pageProgressFragment.setArguments(bundle);                    transaction.add(R.id.content, pageProgressFragment);                    fragments.add(pageProgressFragment);                } else {                    transaction.show(pageProgressFragment);                }                break;        }        transaction.commitAllowingStateLoss();    }    private void hideFragments(FragmentTransaction transaction) {        for (Fragment fragment : fragments) {            if (fragment != null) {                transaction.hide(fragment);            }        }    }}